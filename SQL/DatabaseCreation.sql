CREATE SCHEMA IF NOT EXISTS `AEB`;
USE `AEB`;

CREATE TABLE IF NOT EXISTS `Categories` (
  `CategoryID` INT NOT NULL AUTO_INCREMENT UNIQUE,
  `CategoryName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`CategoryID`)
);

CREATE TABLE IF NOT EXISTS Users (
  `UserID` INT NOT NULL AUTO_INCREMENT UNIQUE,
  `FirstName` VARCHAR(45) NULL DEFAULT NULL,
  `LastName` VARCHAR(45) NULL DEFAULT NULL,
  `AddressLineOne` VARCHAR(45) NULL DEFAULT NULL,
  `City` VARCHAR(45) NULL DEFAULT NULL,
  `State` VARCHAR(45) NULL DEFAULT NULL,
  `ZipCode` INT NULL DEFAULT NULL,
  `StoreCredit` DECIMAL(10,2) NULL DEFAULT 0.00,
  PRIMARY KEY (`UserID`)
);
  
CREATE TABLE IF NOT EXISTS Items (
  `ItemID` INT NOT NULL AUTO_INCREMENT UNIQUE,
  `ItemName` VARCHAR(45) NULL DEFAULT NULL,
  `MainDescription` VARCHAR(500) NULL DEFAULT NULL,
  `CategoryDescription` VARCHAR(500) NULL DEFAULT NULL,
  `Price` DECIMAL(10,2) NOT NULL DEFAULT 0.00,
  `CategoryID` INT NOT NULL,
  PRIMARY KEY (`ItemID`),
  FOREIGN KEY (`CategoryID`)
    REFERENCES Categories (`CategoryID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);
    
CREATE TABLE IF NOT EXISTS Reviews (
  `ReviewsID` INT NOT NULL AUTO_INCREMENT UNIQUE,
  `StarRating` INT NOT NULL,
  `ReviewText` VARCHAR(500) NULL DEFAULT NULL,
  `Picture` VARCHAR(45) NULL DEFAULT NULL,
  `AuthorID` INT NOT NULL,
  `ItemID` INT NOT NULL,
  PRIMARY KEY (`ReviewsID`),
  FOREIGN KEY (`AuthorID`)
    REFERENCES Users (`UserID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  FOREIGN KEY (`ItemID`)
    REFERENCES Items (`ItemID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);
    
CREATE TABLE IF NOT EXISTS HelpfulVotes (
  `ReviewID` INT NOT NULL,
  `UserID` INT NOT NULL,
  `Helpful` BOOLEAN NOT NULL,
  PRIMARY KEY (`ReviewID`, `UserID`),
  FOREIGN KEY (`ReviewID`)
    REFERENCES Reviews (`ReviewsID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  FOREIGN KEY (`UserID`)
    REFERENCES Users (`UserID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);    

CREATE TABLE IF NOT EXISTS Logins (
  `UserName` VARCHAR(45) NOT NULL,
  `PassWord` VARCHAR(45) NOT NULL,
  `UserID` INT NOT NULL,
  PRIMARY KEY (`UserName`),
  FOREIGN KEY (`UserID`)
    REFERENCES Users (`UserID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);
    
CREATE TABLE IF NOT EXISTS Orders (
  `OrderID` INT NOT NULL AUTO_INCREMENT UNIQUE,
  `DatePlaced` DATETIME NULL DEFAULT NOW(),
  `Cost` DECIMAL(10,2) NULL DEFAULT NULL,
  `AddressLineOne` VARCHAR(45) NULL DEFAULT NULL,
  `City` VARCHAR(45) NULL DEFAULT NULL,
  `State` VARCHAR(45) NULL DEFAULT NULL,
  `ZipCode` INT NULL DEFAULT NULL,
  `UserID` INT NOT NULL,
  PRIMARY KEY (`OrderID`),
  FOREIGN KEY (`UserID`)
    REFERENCES Users (`UserID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS OrderItems (
  `ItemID` INT NOT NULL,
  `ItemCount` INT NOT NULL,
  `OrderID` INT NOT NULL,
  PRIMARY KEY(`ItemID`, `OrderID`),
  FOREIGN KEY (`ItemID`)
    REFERENCES Items (`ItemID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  FOREIGN KEY (`OrderID`)
    REFERENCES Orders (`OrderID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Pictures (
  `PictureID` INT NOT NULL AUTO_INCREMENT UNIQUE,
  `Link` VARCHAR(45) NOT NULL,
  `ItemID` INT NOT NULL,
  PRIMARY KEY (`PictureID`),
  FOREIGN KEY (`ItemID`)
    REFERENCES Items (`ItemID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Sales (
  `SalePrice` DECIMAL(10,2) NOT NULL,
  `SaleEnds` DATETIME NULL,
  `ItemID` INT NOT NULL UNIQUE,
  PRIMARY KEY (`SalePrice`, `ItemID`),
  FOREIGN KEY (`ItemID`)
    REFERENCES Items (`ItemID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS ShoppingCarts (
  `UserID` INT NOT NULL,
  `ItemID` INT NOT NULL,
  `ItemCount` INT NOT NULL,
  PRIMARY KEY (`UserID`, `ItemID`),
  FOREIGN KEY (`UserID`)
    REFERENCES Users (`UserID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  FOREIGN KEY (`ItemID`)
    REFERENCES Items (`ItemID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);